// CUSTOM KEY BINDINGS
// @runxel • Windows
// overrides the defaultsauto[]
// A minus (-) infront of a command will remove the respective key(s)
[
    // delete current line
    {
        "key": "ctrl+d",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    // find next match
    {
        "key": "ctrl+b",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    // comment action
    {
        "key": "ctrl+oem_7",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+oem_7",
        "command": "editor.action.blockComment",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+oem_2",
        "command": "-editor.action.blockComment",
        "when": "editorFocus"
    },
    // toggle Word Wrap for current file
    {
        "key": "alt+w",
        "command": "editor.action.toggleWordWrap"
    },
    {
        "key": "alt+z",
        "command": "-editor.action.toggleWordWrap"
    },
    // inspect scope
    {
        "key": "ctrl+shift+alt+p",
        "command": "editor.action.inspectTMScopes"
    },
    // move cursor to the right
    // used to mimic the "move cursor out of parentheses, quotes, brackets" behaviour of
    // Sublime text, even tho it's not smart – still it should work as dirty solution
    {
        "key": "shift+tab",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "editor.action.transformToTitlecase"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "ctrl+k m",
        "command": "-workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "alt+r",
        "command": "revealFileInOS"
        // "when": "!editorFocus"
    },
    {
        "key": "shift+alt+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchRegex",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+f11",
        "command": "workbench.action.toggleCenteredLayout"
    },
    {
        "key": "ctrl+alt+g",
        "command": "git.sync"
    },
    {
        "key": "f2",
        "command": "-extension.CodeSender"
    },
    {
        "key": "ctrl+k ctrl+enter",
        "command": "github.copilot.generate",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated"
    },
    {
        "key": "ctrl+shift+v",
        "command": "livePreview.start.preview.atFile"
    },
    {
        "key": "ctrl+shift+v",
        "command": "markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-excel.preview",
        "when": "editorLangId == 'excel'"
    }
]
